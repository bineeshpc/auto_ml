---
# Configuration file for automating the tasks of machine learning competion
# every data goes under output_location
# certain module level configurations are also possible

output_location: &output_location /tmp/competition/
src_location: /home/bineesh/Dropbox/competition/endtoend

# generate graphs based on input data
# generate figures as well as ipython notebooks
exploratory_data_analysis: 
  program: exploratory_data_analysis.py
  log_location: exploratory_data_analysis.log
  directory: exploratory_data_analysis

# split the data as hold out set
# then to train test split etc for cross validation
splitter: 
  program: splitter.py
  log_location: splitter.log
  directory: splitter
# Data can be of type numerical, categorical, text, image etc
generate_datatypes: 
  program: generate_datatypes.py
  log_location: generate_datatypes.log
  directory: generate_datatypes

# stacker to horizontally stack different features
# for example combine different data types

stacker: stacker.py

# Feature selector can select features after the stacking step

feature_selector: feature_selector.py

# Model selector

model_selector: 
  program: model_selector.py
  log_location: model_selector.log
  directory: model_selector
  problem_type: regression
  model_filename: winning_model.pkl
    # classification: false
  


# Hyper parameter selector

hyper_parameter_selector: 
  program: hyper_parameter_selector.py
  log_location: hyper_parameter_selector.log
  directory: hyper_parameter_selector
  problem_type: classification
  model_filename: winning_model.pkl

# evaluator

evaluator: 
  program: evaluator.py
  log_location: evaluator.log
  directory: evaluator
  prediction_file: prediction.csv


run_endtoend:
  program: run_endtoend.py
  log_location: run_endtoend.log
  directory: run_endtoend
  order: 
    - exploratory_data_analysis
    - splitter
    - generate_datatypes
    - model_selector
    - hyper_parameter_selector
    - evaluator
  exploratory_data_analysis:
    order: 
      - input_file
    location:
      - None
    run: no
    input_file: winequality-red.csv
  splitter:
    order:
      - input_file
      - y_column
    location:
      - None
      - None
    run: yes
    input_file: winequality-red.csv
    y_column: quality
  generate_datatypes:
    order:
      - X_train
    location:
      - splitter
    run: yes
    X_train: X_train.csv
  model_selector:
    order:
      - X_train
      - y_train
    location:
      - splitter
      - splitter
    run: no
    X_train: X_train.csv
    y_train: y_train.csv
  hyper_parameter_selector:
    order:
      - X_train
      - y_train
    location:
      - splitter
      - splitter
    run: yes
    X_train: X_train.csv
    y_train: y_train.csv
  evaluator:
    order:
      - X_test
      - y_test
      - winning_model
      - problem_type
    location:
      - splitter
      - splitter
      - model_selector
      - None
    run: yes
    X_test: X_test.csv
    y_test: y_test.csv
    winning_model: winning_model.pkl
    problem_type: classification # can be classification or regression
    
